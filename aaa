{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "cHM2wsktWIXk"
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from sklearn.feature_extraction.text import CountVectorizer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "msGyV7mOfUol"
   },
   "outputs": [],
   "source": [
    "from pathlib import Path"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "1vjLnzXAZECV"
   },
   "outputs": [],
   "source": [
    "from gensim.models import LsiModel\n",
    "from gensim.corpora.textcorpus import TextCorpus\n",
    "from gensim.corpora import Dictionary\n",
    "from gensim.parsing.preprocessing import remove_stopword_tokens"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "*У меня есть датасет с обращениями в техподдержку, который я разметил на шесть классов.\n",
    "В этом ноутбуке я попробовал выделить классы автоматически тематическим моделированием с помощью алгоритма латентного семантического анализа и проверить получившиеся классы со своими.*"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "OWs1D4SKxseP"
   },
   "source": [
    "# Кластеризация текстов по темам:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1000
    },
    "id": "fag2Fc0cWpqB",
    "outputId": "e8e031cb-3fb0-4759-88ed-d2e61fb0b176"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-8fe53d65-4ae4-4e0a-87b8-cfa17cada6e5\" class=\"colab-df-container\">\n",
       "    <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Обращение в ТП</th>\n",
       "      <th>Типы проблем</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>не заводится.</td>\n",
       "      <td>не заводится автомобиль</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Больше суток не поступают деньги на телефон</td>\n",
       "      <td>сбои при пополнении баланса</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Вопрос по клонированию ключа</td>\n",
       "      <td>другие проблемы с авто</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>не может завести авто</td>\n",
       "      <td>не заводится автомобиль</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>не заводится.</td>\n",
       "      <td>не заводится автомобиль</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>пополнил баланс не туда - что делать и как вер...</td>\n",
       "      <td>сбои при пополнении баланса</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>купил авто переоформить.</td>\n",
       "      <td>переоформление автомобиля</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>машина заводится и глохнет</td>\n",
       "      <td>не заводится автомобиль</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>пропустил звонок.</td>\n",
       "      <td>другие/недифференцируемые</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>батарейка в брелоке быстро садится.</td>\n",
       "      <td>другие проблемы с авто</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>перестали приходить пуш уведомления</td>\n",
       "      <td>сбои в работе приложений</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>техвопрос</td>\n",
       "      <td>другие/недифференцируемые</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>не может войти в систему.</td>\n",
       "      <td>сбои в работе приложений</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Не функционирует мобильное приложение</td>\n",
       "      <td>сбои в работе приложений</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>купил авто  переоформить.</td>\n",
       "      <td>переоформление автомобиля</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Как оформить авто на нового владельца?</td>\n",
       "      <td>переоформление автомобиля</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>продал авто  как переоформить?</td>\n",
       "      <td>переоформление автомобиля</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Срочно! Не заводится</td>\n",
       "      <td>не заводится автомобиль</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>не может войти в систему.</td>\n",
       "      <td>сбои в работе приложений</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>не заводится. (повторная).</td>\n",
       "      <td>не заводится автомобиль</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>купил авто  переоформить.</td>\n",
       "      <td>переоформление автомобиля</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>машина не заводится</td>\n",
       "      <td>не заводится автомобиль</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>с приложения не управляется.</td>\n",
       "      <td>сбои в работе приложений</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>не может войти в приложение, пишет пользовател...</td>\n",
       "      <td>сбои в работе приложений</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>машина не заводится вообще</td>\n",
       "      <td>не заводится автомобиль</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Как оформить  на нового владельца?</td>\n",
       "      <td>переоформление автомобиля</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>машина глохнет</td>\n",
       "      <td>не заводится автомобиль</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>смена номера  владельца</td>\n",
       "      <td>переоформление автомобиля</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>Как сменить пользователя?</td>\n",
       "      <td>другие/недифференцируемые</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>сменить основной номер владельца</td>\n",
       "      <td>переоформление автомобиля</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>пополнил баланс через приложение, как вернуть?</td>\n",
       "      <td>сбои при пополнении баланса</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>в приложение не показывает местоположение машины</td>\n",
       "      <td>сбои в работе приложений</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Пропадает связь с сигнализацией, баланс положи...</td>\n",
       "      <td>сбои в работе приложений</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>авто заблокирован</td>\n",
       "      <td>другие проблемы с авто</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>не заводится.</td>\n",
       "      <td>не заводится автомобиль</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>в приложение не показывает местоположение машины</td>\n",
       "      <td>сбои в работе приложений</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>Пропала связь с машиной, баланс положительный</td>\n",
       "      <td>сбои в работе приложений</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>Как сменить номер владельца ?</td>\n",
       "      <td>переоформление автомобиля</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>купил авто. переоформить.</td>\n",
       "      <td>переоформление автомобиля</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>не открывается авто.</td>\n",
       "      <td>другие проблемы с авто</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>Не работает автозапуск.</td>\n",
       "      <td>сбои в работе приложений</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>Вопрос по балансу</td>\n",
       "      <td>сбои при пополнении баланса</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>пополнил баланс через приложение, как вернуть?</td>\n",
       "      <td>сбои при пополнении баланса</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>не может войти в приложение.</td>\n",
       "      <td>сбои в работе приложений</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>заводится и глохнет</td>\n",
       "      <td>не заводится автомобиль</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>купил авто. переоформить.</td>\n",
       "      <td>переоформление автомобиля</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>сама по себе заводится.</td>\n",
       "      <td>не заводится автомобиль</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>приложение не работает. после обновления.</td>\n",
       "      <td>сбои в работе приложений</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>Пропала связь с приложением, баланс положительный</td>\n",
       "      <td>сбои в работе приложений</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "    <div class=\"colab-df-buttons\">\n",
       "\n",
       "  <div class=\"colab-df-container\">\n",
       "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8fe53d65-4ae4-4e0a-87b8-cfa17cada6e5')\"\n",
       "            title=\"Convert this dataframe to an interactive table.\"\n",
       "            style=\"display:none;\">\n",
       "\n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
       "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
       "  </svg>\n",
       "    </button>\n",
       "\n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    .colab-df-buttons div {\n",
       "      margin-bottom: 4px;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "    <script>\n",
       "      const buttonEl =\n",
       "        document.querySelector('#df-8fe53d65-4ae4-4e0a-87b8-cfa17cada6e5 button.colab-df-convert');\n",
       "      buttonEl.style.display =\n",
       "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "      async function convertToInteractive(key) {\n",
       "        const element = document.querySelector('#df-8fe53d65-4ae4-4e0a-87b8-cfa17cada6e5');\n",
       "        const dataTable =\n",
       "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                    [key], {});\n",
       "        if (!dataTable) return;\n",
       "\n",
       "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "          + ' to learn more about interactive tables.';\n",
       "        element.innerHTML = '';\n",
       "        dataTable['output_type'] = 'display_data';\n",
       "        await google.colab.output.renderOutput(dataTable, element);\n",
       "        const docLink = document.createElement('div');\n",
       "        docLink.innerHTML = docLinkHtml;\n",
       "        element.appendChild(docLink);\n",
       "      }\n",
       "    </script>\n",
       "  </div>\n",
       "\n",
       "\n",
       "<div id=\"df-daaa6fd3-a371-458d-8903-f1d454553192\">\n",
       "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-daaa6fd3-a371-458d-8903-f1d454553192')\"\n",
       "            title=\"Suggest charts.\"\n",
       "            style=\"display:none;\">\n",
       "\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "     width=\"24px\">\n",
       "    <g>\n",
       "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
       "    </g>\n",
       "</svg>\n",
       "  </button>\n",
       "\n",
       "<style>\n",
       "  .colab-df-quickchart {\n",
       "      --bg-color: #E8F0FE;\n",
       "      --fill-color: #1967D2;\n",
       "      --hover-bg-color: #E2EBFA;\n",
       "      --hover-fill-color: #174EA6;\n",
       "      --disabled-fill-color: #AAA;\n",
       "      --disabled-bg-color: #DDD;\n",
       "  }\n",
       "\n",
       "  [theme=dark] .colab-df-quickchart {\n",
       "      --bg-color: #3B4455;\n",
       "      --fill-color: #D2E3FC;\n",
       "      --hover-bg-color: #434B5C;\n",
       "      --hover-fill-color: #FFFFFF;\n",
       "      --disabled-bg-color: #3B4455;\n",
       "      --disabled-fill-color: #666;\n",
       "  }\n",
       "\n",
       "  .colab-df-quickchart {\n",
       "    background-color: var(--bg-color);\n",
       "    border: none;\n",
       "    border-radius: 50%;\n",
       "    cursor: pointer;\n",
       "    display: none;\n",
       "    fill: var(--fill-color);\n",
       "    height: 32px;\n",
       "    padding: 0;\n",
       "    width: 32px;\n",
       "  }\n",
       "\n",
       "  .colab-df-quickchart:hover {\n",
       "    background-color: var(--hover-bg-color);\n",
       "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "    fill: var(--button-hover-fill-color);\n",
       "  }\n",
       "\n",
       "  .colab-df-quickchart-complete:disabled,\n",
       "  .colab-df-quickchart-complete:disabled:hover {\n",
       "    background-color: var(--disabled-bg-color);\n",
       "    fill: var(--disabled-fill-color);\n",
       "    box-shadow: none;\n",
       "  }\n",
       "\n",
       "  .colab-df-spinner {\n",
       "    border: 2px solid var(--fill-color);\n",
       "    border-color: transparent;\n",
       "    border-bottom-color: var(--fill-color);\n",
       "    animation:\n",
       "      spin 1s steps(1) infinite;\n",
       "  }\n",
       "\n",
       "  @keyframes spin {\n",
       "    0% {\n",
       "      border-color: transparent;\n",
       "      border-bottom-color: var(--fill-color);\n",
       "      border-left-color: var(--fill-color);\n",
       "    }\n",
       "    20% {\n",
       "      border-color: transparent;\n",
       "      border-left-color: var(--fill-color);\n",
       "      border-top-color: var(--fill-color);\n",
       "    }\n",
       "    30% {\n",
       "      border-color: transparent;\n",
       "      border-left-color: var(--fill-color);\n",
       "      border-top-color: var(--fill-color);\n",
       "      border-right-color: var(--fill-color);\n",
       "    }\n",
       "    40% {\n",
       "      border-color: transparent;\n",
       "      border-right-color: var(--fill-color);\n",
       "      border-top-color: var(--fill-color);\n",
       "    }\n",
       "    60% {\n",
       "      border-color: transparent;\n",
       "      border-right-color: var(--fill-color);\n",
       "    }\n",
       "    80% {\n",
       "      border-color: transparent;\n",
       "      border-right-color: var(--fill-color);\n",
       "      border-bottom-color: var(--fill-color);\n",
       "    }\n",
       "    90% {\n",
       "      border-color: transparent;\n",
       "      border-bottom-color: var(--fill-color);\n",
       "    }\n",
       "  }\n",
       "</style>\n",
       "\n",
       "  <script>\n",
       "    async function quickchart(key) {\n",
       "      const quickchartButtonEl =\n",
       "        document.querySelector('#' + key + ' button');\n",
       "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
       "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
       "      try {\n",
       "        const charts = await google.colab.kernel.invokeFunction(\n",
       "            'suggestCharts', [key], {});\n",
       "      } catch (error) {\n",
       "        console.error('Error during call to suggestCharts:', error);\n",
       "      }\n",
       "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
       "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
       "    }\n",
       "    (() => {\n",
       "      let quickchartButtonEl =\n",
       "        document.querySelector('#df-daaa6fd3-a371-458d-8903-f1d454553192 button');\n",
       "      quickchartButtonEl.style.display =\n",
       "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "    })();\n",
       "  </script>\n",
       "</div>\n",
       "    </div>\n",
       "  </div>\n"
      ],
      "text/plain": [
       "                                       Обращение в ТП  \\\n",
       "0                                       не заводится.   \n",
       "1         Больше суток не поступают деньги на телефон   \n",
       "2                        Вопрос по клонированию ключа   \n",
       "3                               не может завести авто   \n",
       "4                                       не заводится.   \n",
       "5   пополнил баланс не туда - что делать и как вер...   \n",
       "6                            купил авто переоформить.   \n",
       "7                          машина заводится и глохнет   \n",
       "8                                   пропустил звонок.   \n",
       "9                 батарейка в брелоке быстро садится.   \n",
       "10                перестали приходить пуш уведомления   \n",
       "11                                          техвопрос   \n",
       "12                          не может войти в систему.   \n",
       "13              Не функционирует мобильное приложение   \n",
       "14                          купил авто  переоформить.   \n",
       "15             Как оформить авто на нового владельца?   \n",
       "16                     продал авто  как переоформить?   \n",
       "17                               Срочно! Не заводится   \n",
       "18                          не может войти в систему.   \n",
       "19                         не заводится. (повторная).   \n",
       "20                          купил авто  переоформить.   \n",
       "21                                машина не заводится   \n",
       "22                       с приложения не управляется.   \n",
       "23  не может войти в приложение, пишет пользовател...   \n",
       "24                         машина не заводится вообще   \n",
       "25                 Как оформить  на нового владельца?   \n",
       "26                                     машина глохнет   \n",
       "27                            смена номера  владельца   \n",
       "28                          Как сменить пользователя?   \n",
       "29                   сменить основной номер владельца   \n",
       "30     пополнил баланс через приложение, как вернуть?   \n",
       "31   в приложение не показывает местоположение машины   \n",
       "32  Пропадает связь с сигнализацией, баланс положи...   \n",
       "33                                  авто заблокирован   \n",
       "34                                      не заводится.   \n",
       "35   в приложение не показывает местоположение машины   \n",
       "36      Пропала связь с машиной, баланс положительный   \n",
       "37                      Как сменить номер владельца ?   \n",
       "38                          купил авто. переоформить.   \n",
       "39                               не открывается авто.   \n",
       "40                            Не работает автозапуск.   \n",
       "41                                  Вопрос по балансу   \n",
       "42     пополнил баланс через приложение, как вернуть?   \n",
       "43                       не может войти в приложение.   \n",
       "44                                заводится и глохнет   \n",
       "45                          купил авто. переоформить.   \n",
       "46                            сама по себе заводится.   \n",
       "47          приложение не работает. после обновления.   \n",
       "48  Пропала связь с приложением, баланс положительный   \n",
       "\n",
       "                   Типы проблем  \n",
       "0       не заводится автомобиль  \n",
       "1   сбои при пополнении баланса  \n",
       "2        другие проблемы с авто  \n",
       "3       не заводится автомобиль  \n",
       "4       не заводится автомобиль  \n",
       "5   сбои при пополнении баланса  \n",
       "6     переоформление автомобиля  \n",
       "7       не заводится автомобиль  \n",
       "8     другие/недифференцируемые  \n",
       "9        другие проблемы с авто  \n",
       "10     сбои в работе приложений  \n",
       "11    другие/недифференцируемые  \n",
       "12     сбои в работе приложений  \n",
       "13     сбои в работе приложений  \n",
       "14    переоформление автомобиля  \n",
       "15    переоформление автомобиля  \n",
       "16    переоформление автомобиля  \n",
       "17      не заводится автомобиль  \n",
       "18     сбои в работе приложений  \n",
       "19      не заводится автомобиль  \n",
       "20    переоформление автомобиля  \n",
       "21      не заводится автомобиль  \n",
       "22     сбои в работе приложений  \n",
       "23     сбои в работе приложений  \n",
       "24      не заводится автомобиль  \n",
       "25    переоформление автомобиля  \n",
       "26      не заводится автомобиль  \n",
       "27    переоформление автомобиля  \n",
       "28    другие/недифференцируемые  \n",
       "29    переоформление автомобиля  \n",
       "30  сбои при пополнении баланса  \n",
       "31     сбои в работе приложений  \n",
       "32     сбои в работе приложений  \n",
       "33       другие проблемы с авто  \n",
       "34      не заводится автомобиль  \n",
       "35     сбои в работе приложений  \n",
       "36     сбои в работе приложений  \n",
       "37    переоформление автомобиля  \n",
       "38    переоформление автомобиля  \n",
       "39       другие проблемы с авто  \n",
       "40     сбои в работе приложений  \n",
       "41  сбои при пополнении баланса  \n",
       "42  сбои при пополнении баланса  \n",
       "43     сбои в работе приложений  \n",
       "44      не заводится автомобиль  \n",
       "45    переоформление автомобиля  \n",
       "46      не заводится автомобиль  \n",
       "47     сбои в работе приложений  \n",
       "48     сбои в работе приложений  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_problems = pd.read_csv(\n",
    "    '/content/drive/MyDrive/Исаков_ДЗ по аналитике_датасет - Лист1.csv') # предварительно табличку перевёл в csv\n",
    "df_problems"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "rlEfx1UvXs54"
   },
   "outputs": [],
   "source": [
    "# Создаю корпус из поля \"Обращение в ТП\"\n",
    "\n",
    "appeals = '\\n'.join(list(df_problems['Обращение в ТП']))\n",
    "with open('appeals corpus', 'w', encoding='utf-8') as file_corpus:\n",
    "  file_corpus.write(appeals)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "lgbCGDM6kjXh"
   },
   "outputs": [],
   "source": [
    "# Загружаю корпус, токенизирую тексты\n",
    "\n",
    "corpus = TextCorpus('/content/appeals corpus',\n",
    "                    token_filters = [remove_stopword_tokens])\n",
    "texts = list(corpus.get_texts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "tTEtk_ETtvff",
    "outputId": "0028e251-ccb1-47d5-b382-c27db6dcf168"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[['не', 'заводится'],\n",
       " ['Больше', 'суток', 'не', 'поступают', 'деньги', 'на', 'телефон'],\n",
       " ['Вопрос', 'по', 'клонированию', 'ключа'],\n",
       " ['не', 'может', 'завести', 'авто'],\n",
       " ['не', 'заводится'],\n",
       " ['пополнил', 'баланс', 'не', 'туда', 'что', 'делать', 'и', 'как', 'вернуть'],\n",
       " ['купил', 'авто', 'переоформить'],\n",
       " ['машина', 'заводится', 'и', 'глохнет'],\n",
       " ['пропустил', 'звонок'],\n",
       " ['батареика', 'в', 'брелоке', 'быстро', 'садится'],\n",
       " ['перестали', 'приходить', 'пуш', 'уведомления'],\n",
       " ['техвопрос'],\n",
       " ['не', 'может', 'воити', 'в', 'систему'],\n",
       " ['Не', 'функционирует', 'мобильное', 'приложение'],\n",
       " ['купил', 'авто', 'переоформить'],\n",
       " ['Как', 'оформить', 'авто', 'на', 'нового', 'владельца'],\n",
       " ['продал', 'авто', 'как', 'переоформить'],\n",
       " ['Срочно', 'Не', 'заводится'],\n",
       " ['не', 'может', 'воити', 'в', 'систему'],\n",
       " ['не', 'заводится', 'повторная'],\n",
       " ['купил', 'авто', 'переоформить'],\n",
       " ['машина', 'не', 'заводится'],\n",
       " ['с', 'приложения', 'не', 'управляется'],\n",
       " ['не',\n",
       "  'может',\n",
       "  'воити',\n",
       "  'в',\n",
       "  'приложение',\n",
       "  'пишет',\n",
       "  'пользователь',\n",
       "  'не',\n",
       "  'наиден'],\n",
       " ['машина', 'не', 'заводится', 'вообще'],\n",
       " ['Как', 'оформить', 'на', 'нового', 'владельца'],\n",
       " ['машина', 'глохнет'],\n",
       " ['смена', 'номера', 'владельца'],\n",
       " ['Как', 'сменить', 'пользователя'],\n",
       " ['сменить', 'основнои', 'номер', 'владельца'],\n",
       " ['пополнил', 'баланс', 'через', 'приложение', 'как', 'вернуть'],\n",
       " ['в', 'приложение', 'не', 'показывает', 'местоположение', 'машины'],\n",
       " ['Пропадает', 'связь', 'с', 'сигнализациеи', 'баланс', 'положительныи'],\n",
       " ['авто', 'заблокирован'],\n",
       " ['не', 'заводится'],\n",
       " ['в', 'приложение', 'не', 'показывает', 'местоположение', 'машины'],\n",
       " ['Пропала', 'связь', 'с', 'машинои', 'баланс', 'положительныи'],\n",
       " ['Как', 'сменить', 'номер', 'владельца'],\n",
       " ['купил', 'авто', 'переоформить'],\n",
       " ['не', 'открывается', 'авто'],\n",
       " ['Не', 'работает', 'автозапуск'],\n",
       " ['Вопрос', 'по', 'балансу'],\n",
       " ['пополнил', 'баланс', 'через', 'приложение', 'как', 'вернуть'],\n",
       " ['не', 'может', 'воити', 'в', 'приложение'],\n",
       " ['заводится', 'и', 'глохнет'],\n",
       " ['купил', 'авто', 'переоформить'],\n",
       " ['сама', 'по', 'себе', 'заводится'],\n",
       " ['приложение', 'не', 'работает', 'после', 'обновления'],\n",
       " ['Пропала', 'связь', 'с', 'приложением', 'баланс', 'положительныи']]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "texts"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "YdkoeFEnt1at"
   },
   "outputs": [],
   "source": [
    "dictionary = Dictionary(texts)\n",
    "bow_corpus = [dictionary.doc2bow(text) for text in texts]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "T23p_IN4oGLk",
    "outputId": "d2054641-12ba-4f42-d78f-af36033a59ef"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[(0,\n",
       "  '0.734*\"не\" + 0.334*\"в\" + 0.293*\"приложение\" + 0.259*\"может\" + 0.228*\"воити\"'),\n",
       " (1,\n",
       "  '-0.506*\"баланс\" + -0.296*\"с\" + -0.285*\"связь\" + -0.285*\"положительныи\" + -0.267*\"как\"'),\n",
       " (2,\n",
       "  '-0.641*\"авто\" + -0.435*\"переоформить\" + -0.363*\"купил\" + 0.222*\"баланс\" + -0.161*\"владельца\"'),\n",
       " (3,\n",
       "  '0.629*\"заводится\" + -0.304*\"в\" + -0.276*\"приложение\" + 0.256*\"машина\" + 0.194*\"не\"'),\n",
       " (4,\n",
       "  '-0.521*\"владельца\" + -0.421*\"Как\" + -0.343*\"сменить\" + -0.291*\"на\" + -0.264*\"номер\"'),\n",
       " (5,\n",
       "  '0.366*\"машины\" + 0.366*\"показывает\" + 0.366*\"местоположение\" + 0.325*\"приложение\" + -0.257*\"может\"')]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Кластеризация с помощью латентного семантического разложения на 6 тем (столько я определил при разметке)\n",
    "\n",
    "lsi_model = LsiModel(bow_corpus,\n",
    "                     id2word=dictionary,\n",
    "                     num_topics = 6,\n",
    "                     chunksize = 20)\n",
    "\n",
    "lsi_model.print_topics(-1, 5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "AC6JRDX-x0ne"
   },
   "source": [
    "# Визуализация:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "_V_65R5i0yco"
   },
   "outputs": [],
   "source": [
    "from sklearn.decomposition import PCA\n",
    "import numpy as np\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "HzjOxRtRu9TP"
   },
   "outputs": [],
   "source": [
    "# Применяю модель к корпусу, чтобы получить вероятности тем для каждого документа\n",
    "\n",
    "texts_topics = lsi_model[bow_corpus]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "8mdpnhgZxTUS",
    "outputId": "72813f60-34c3-4ef7-9caf-be3ce4614f29"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[[(0, 0.9219884143641468),\n",
       "  (1, 0.28668651341344076),\n",
       "  (2, 0.04866597152304059),\n",
       "  (3, 0.8232825797118166),\n",
       "  (4, 0.09725031358366558),\n",
       "  (5, -0.0174522123025853)],\n",
       " [(0, 0.8986698364668264),\n",
       "  (1, 0.12735625913028187),\n",
       "  (2, -0.15243730338253983),\n",
       "  (3, 0.46353025380473856),\n",
       "  (4, -0.7290752334278185),\n",
       "  (5, -0.6376978201961022)],\n",
       " [(0, 0.011022817175029693),\n",
       "  (1, -0.008390056160579515),\n",
       "  (2, -0.060593496882369355),\n",
       "  (3, 0.10581099401819048),\n",
       "  (4, 0.05562332727434272),\n",
       "  (5, 0.05587668075211481)],\n",
       " [(0, 1.100265151088614),\n",
       "  (1, -0.09389776281006848),\n",
       "  (2, -0.7564596168063787),\n",
       "  (3, 0.11438743929956427),\n",
       "  (4, 0.2641640407234923),\n",
       "  (5, -0.37641615203316736)],\n",
       " [(0, 0.9219884143641468),\n",
       "  (1, 0.28668651341344076),\n",
       "  (2, 0.04866597152304059),\n",
       "  (3, 0.8232825797118166),\n",
       "  (4, 0.09725031358366558),\n",
       "  (5, -0.0174522123025853)],\n",
       " [(0, 1.1605427745634858),\n",
       "  (1, -1.4215184285543851),\n",
       "  (2, 0.5751646954033771),\n",
       "  (3, 0.1587911771423971),\n",
       "  (4, 0.09266402587854664),\n",
       "  (5, -1.1781442606223618)],\n",
       " [(0, 0.10258306236482946),\n",
       "  (1, -0.5846563668337497),\n",
       "  (2, -1.4388564627263083),\n",
       "  (3, 0.11760913476524187),\n",
       "  (4, 0.5075521129575737),\n",
       "  (5, 0.17275317601392115)],\n",
       " [(0, 0.327692536324925),\n",
       "  (1, 0.2323590735866638),\n",
       "  (2, 0.21366960000521174),\n",
       "  (3, 1.1695091882648976),\n",
       "  (4, 0.12046300860482706),\n",
       "  (5, 0.09971321471940231)],\n",
       " [],\n",
       " [(0, 0.3793021887461307),\n",
       "  (1, 0.07721264831336597),\n",
       "  (2, 0.028420737324538297),\n",
       "  (3, -0.4687121698565191),\n",
       "  (4, -0.30003662759930444),\n",
       "  (5, 0.25896041796128483)],\n",
       " [],\n",
       " [],\n",
       " [(0, 1.6508444182054935),\n",
       "  (1, 0.33151266524653117),\n",
       "  (2, -0.07020858453309595),\n",
       "  (3, -0.5276135045784373),\n",
       "  (4, 0.07801661096881449),\n",
       "  (5, -0.5572997065120194)],\n",
       " [(0, 0.3044005815827203),\n",
       "  (1, -0.05838517196572267),\n",
       "  (2, 0.07520870061427566),\n",
       "  (3, -0.12450489682293647),\n",
       "  (4, -0.07676345581836852),\n",
       "  (5, 0.4934621864973347)],\n",
       " [(0, 0.10258306236482946),\n",
       "  (1, -0.5846563668337497),\n",
       "  (2, -1.4388564627263083),\n",
       "  (3, 0.11760913476524187),\n",
       "  (4, 0.5075521129575737),\n",
       "  (5, 0.17275317601392115)],\n",
       " [(0, 0.12660819845034862),\n",
       "  (1, -0.4423661445003954),\n",
       "  (2, -1.2435921206341578),\n",
       "  (3, 0.31733736172405363),\n",
       "  (4, -1.462787622958997),\n",
       "  (5, -0.03174675673864961)],\n",
       " [(0, 0.165657031578804),\n",
       "  (1, -0.7507404571230769),\n",
       "  (2, -1.1349977524826775),\n",
       "  (3, 0.024877760772746164),\n",
       "  (4, 0.4060170772488937),\n",
       "  (5, -0.07106954852513177)],\n",
       " [(0, 0.20426963577409044),\n",
       "  (1, 0.22711617736321946),\n",
       "  (2, 0.06984499690063563),\n",
       "  (3, 0.7993819039811746),\n",
       "  (4, 0.07797296600906163),\n",
       "  (5, 0.2570943126816847)],\n",
       " [(0, 1.6508444182054935),\n",
       "  (1, 0.33151266524653117),\n",
       "  (2, -0.07020858453309595),\n",
       "  (3, -0.5276135045784373),\n",
       "  (4, 0.07801661096881449),\n",
       "  (5, -0.5572997065120194)],\n",
       " [(0, 0.948433340147537),\n",
       "  (1, 0.305063508395489),\n",
       "  (2, 0.051881050243077126),\n",
       "  (3, 0.8891189753692922),\n",
       "  (4, 0.10939271317768928),\n",
       "  (5, -0.022221373195043248)],\n",
       " [(0, 0.10258306236482946),\n",
       "  (1, -0.5846563668337497),\n",
       "  (2, -1.4388564627263083),\n",
       "  (3, 0.11760913476524187),\n",
       "  (4, 0.5075521129575737),\n",
       "  (5, 0.17275317601392115)],\n",
       " [(0, 0.993522766314478),\n",
       "  (1, 0.3609425012408411),\n",
       "  (2, 0.06659180154229258),\n",
       "  (3, 1.078829487755928),\n",
       "  (4, 0.12602378701729505),\n",
       "  (5, 0.04089391203755842)],\n",
       " [(0, 0.8226232046970637),\n",
       "  (1, -0.21384466957855444),\n",
       "  (2, 0.1503618399067211),\n",
       "  (3, 0.448932097534934),\n",
       "  (4, 0.03460898775161933),\n",
       "  (5, 0.0108517163565068)],\n",
       " [(0, 2.825385234180802),\n",
       "  (1, 0.33761372144175317),\n",
       "  (2, 0.006251012835357384),\n",
       "  (3, -0.631715426549031),\n",
       "  (4, 0.015991665193665495),\n",
       "  (5, -0.4066735405566041)],\n",
       " [(0, 1.0226828116761328),\n",
       "  (1, 0.3918977368643257),\n",
       "  (2, 0.06965343916404329),\n",
       "  (3, 1.1616269263417838),\n",
       "  (4, 0.134963832604703),\n",
       "  (5, 0.05197150935963918)],\n",
       " [(0, 0.05041074899472257),\n",
       "  (1, -0.19485203991977723),\n",
       "  (2, -0.6029003810165985),\n",
       "  (3, 0.2403070534997412),\n",
       "  (4, -1.630888565468739),\n",
       "  (5, -0.07540772931712493)],\n",
       " [(0, 0.09063319094763507),\n",
       "  (1, 0.11035582601648121),\n",
       "  (2, 0.0664628616824187),\n",
       "  (3, 0.4050839762774395),\n",
       "  (4, 0.03193676463718575),\n",
       "  (5, 0.09731639366095116)],\n",
       " [(0, 0.005904721193825095),\n",
       "  (1, -0.0619719810202684),\n",
       "  (2, -0.1836072563636175),\n",
       "  (3, 0.07349752737571512),\n",
       "  (4, -0.6351201941792117),\n",
       "  (5, -0.010751526731602973)],\n",
       " [(0, 0.006636857957204055),\n",
       "  (1, -0.07542863114220344),\n",
       "  (2, -0.22446311031780142),\n",
       "  (3, 0.09476205395350004),\n",
       "  (4, -0.8432502648566924),\n",
       "  (5, -0.019122897482882012)],\n",
       " [(0, 0.008063644865534953),\n",
       "  (1, -0.10165292854718844),\n",
       "  (2, -0.30408293063866304),\n",
       "  (3, 0.1362023280260981),\n",
       "  (4, -1.2488538008711987),\n",
       "  (5, -0.03543701089741753)],\n",
       " [(0, 0.5990816009028522),\n",
       "  (1, -1.4531180075505639),\n",
       "  (2, 0.5312684088847157),\n",
       "  (3, -0.6024175120061829),\n",
       "  (4, -0.05461906421643812),\n",
       "  (5, -0.27254691717734714)],\n",
       " [(0, 1.648032098237927),\n",
       "  (1, 0.0887323781421249),\n",
       "  (2, 0.1219941824693571),\n",
       "  (3, -0.6683420351359532),\n",
       "  (4, -0.2053375284439013),\n",
       "  (5, 1.4780404385888262)],\n",
       " [(0, 0.1552866253635919),\n",
       "  (1, -1.5627161441028448),\n",
       "  (2, 0.7350811494208491),\n",
       "  (3, 0.5494077235140289),\n",
       "  (4, -0.01501299516476519),\n",
       "  (5, 0.3357197819763096)],\n",
       " [(0, 0.07843552494308066),\n",
       "  (1, -0.26350645025729513),\n",
       "  (2, -0.6819365199451933),\n",
       "  (3, 0.08265747693550184),\n",
       "  (4, 0.18909272820556947),\n",
       "  (5, 0.05022419716238126)],\n",
       " [(0, 0.9219884143641468),\n",
       "  (1, 0.28668651341344076),\n",
       "  (2, 0.04866597152304059),\n",
       "  (3, 0.8232825797118166),\n",
       "  (4, 0.09725031358366558),\n",
       "  (5, -0.0174522123025853)],\n",
       " [(0, 1.648032098237927),\n",
       "  (1, 0.0887323781421249),\n",
       "  (2, 0.1219941824693571),\n",
       "  (3, -0.6683420351359532),\n",
       "  (4, -0.2053375284439013),\n",
       "  (5, 1.4780404385888262)],\n",
       " [(0, 0.15990064231860204),\n",
       "  (1, -1.657119840184155),\n",
       "  (2, 0.7804404750638707),\n",
       "  (3, 0.5929527224944937),\n",
       "  (4, -0.016443950566593386),\n",
       "  (5, 0.3854309470837525)],\n",
       " [(0, 0.012791035025890693),\n",
       "  (1, -0.14198560310512293),\n",
       "  (2, -0.4219908980645493),\n",
       "  (3, 0.1755048957927293),\n",
       "  (4, -1.5492851726015067),\n",
       "  (5, -0.03272674323328956)],\n",
       " [(0, 0.10258306236482946),\n",
       "  (1, -0.5846563668337497),\n",
       "  (2, -1.4388564627263083),\n",
       "  (3, 0.11760913476524187),\n",
       "  (4, 0.5075521129575737),\n",
       "  (5, 0.17275317601392115)],\n",
       " [(0, 0.8340448297298864),\n",
       "  (1, -0.14816963782266812),\n",
       "  (2, -0.7009395484954009),\n",
       "  (3, 0.29599393540808716),\n",
       "  (4, 0.21567356257603415),\n",
       "  (5, -0.06881763746323166)],\n",
       " [(0, 0.03911398953422092),\n",
       "  (1, 0.02892637038767762),\n",
       "  (2, 0.007497512743661879),\n",
       "  (3, 0.12723511291037987),\n",
       "  (4, -0.0100335544308328),\n",
       "  (5, 0.2161722819121602)],\n",
       " [(0, 0.013257133005203512),\n",
       "  (1, -0.017763971690957767),\n",
       "  (2, -0.0927645103822578),\n",
       "  (3, 0.12515323389787075),\n",
       "  (4, 0.07704974019448338),\n",
       "  (5, 0.07413245574152577)],\n",
       " [(0, 0.5990816009028522),\n",
       "  (1, -1.4531180075505639),\n",
       "  (2, 0.5312684088847157),\n",
       "  (3, -0.6024175120061829),\n",
       "  (4, -0.05461906421643812),\n",
       "  (5, -0.27254691717734714)],\n",
       " [(0, 1.8486296899480434),\n",
       "  (1, 0.1922921622516477),\n",
       "  (2, 0.014107714642176652),\n",
       "  (3, -0.7181913350675142),\n",
       "  (4, -0.013397460908518927),\n",
       "  (5, -0.09080930398194159)],\n",
       " [(0, 0.2561581843745938),\n",
       "  (1, 0.1581030857592635),\n",
       "  (2, 0.19574376998595977),\n",
       "  (3, 0.9139622802207863),\n",
       "  (4, 0.09168953517119759),\n",
       "  (5, 0.04136709037925859)],\n",
       " [(0, 0.10258306236482946),\n",
       "  (1, -0.5846563668337497),\n",
       "  (2, -1.4388564627263083),\n",
       "  (3, 0.11760913476524187),\n",
       "  (4, 0.5075521129575737),\n",
       "  (5, 0.17275317601392115)],\n",
       " [(0, 0.2094553175160266),\n",
       "  (1, 0.2023400856083989),\n",
       "  (2, 0.045182083557662935),\n",
       "  (3, 0.8497126456404298),\n",
       "  (4, 0.13456423768931744),\n",
       "  (5, 0.17847680900590238)],\n",
       " [(0, 1.1296027556929669),\n",
       "  (1, 0.011744851784642752),\n",
       "  (2, 0.06881098956200117),\n",
       "  (3, -0.1071224339400056),\n",
       "  (4, -0.04993293586016516),\n",
       "  (5, 0.3506510779070808)],\n",
       " [(0, 0.1597014524928987),\n",
       "  (1, -1.6563297594246793),\n",
       "  (2, 0.7800073577839827),\n",
       "  (3, 0.5943089063035469),\n",
       "  (4, -0.016525922925851796),\n",
       "  (5, 0.4054945642809712)]]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list(texts_topics)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "5sczWuRgyUxF"
   },
   "outputs": [],
   "source": [
    "# Теперь задача — визуализировать 6мерные векторы в 2мерном пространстве\n",
    "\n",
    "texts_topics_vectors = [[tpl[1] for tpl in txt] for txt in texts_topics]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1000
    },
    "id": "VwQ44jKQy5_v",
    "outputId": "7ab69f52-9a26-4ea7-e7a5-599f01f8ceb8"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-0ede8c9b-e979-4fd3-aa82-b5829d973b4e\" class=\"colab-df-container\">\n",
       "    <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.921988</td>\n",
       "      <td>0.286687</td>\n",
       "      <td>0.048666</td>\n",
       "      <td>0.823283</td>\n",
       "      <td>0.097250</td>\n",
       "      <td>-0.017452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.898670</td>\n",
       "      <td>0.127356</td>\n",
       "      <td>-0.152437</td>\n",
       "      <td>0.463530</td>\n",
       "      <td>-0.729075</td>\n",
       "      <td>-0.637698</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.011023</td>\n",
       "      <td>-0.008390</td>\n",
       "      <td>-0.060593</td>\n",
       "      <td>0.105811</td>\n",
       "      <td>0.055623</td>\n",
       "      <td>0.055877</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1.100265</td>\n",
       "      <td>-0.093898</td>\n",
       "      <td>-0.756460</td>\n",
       "      <td>0.114387</td>\n",
       "      <td>0.264164</td>\n",
       "      <td>-0.376416</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.921988</td>\n",
       "      <td>0.286687</td>\n",
       "      <td>0.048666</td>\n",
       "      <td>0.823283</td>\n",
       "      <td>0.097250</td>\n",
       "      <td>-0.017452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1.160543</td>\n",
       "      <td>-1.421518</td>\n",
       "      <td>0.575165</td>\n",
       "      <td>0.158791</td>\n",
       "      <td>0.092664</td>\n",
       "      <td>-1.178144</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.102583</td>\n",
       "      <td>-0.584656</td>\n",
       "      <td>-1.438856</td>\n",
       "      <td>0.117609</td>\n",
       "      <td>0.507552</td>\n",
       "      <td>0.172753</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.327693</td>\n",
       "      <td>0.232359</td>\n",
       "      <td>0.213670</td>\n",
       "      <td>1.169509</td>\n",
       "      <td>0.120463</td>\n",
       "      <td>0.099713</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.379302</td>\n",
       "      <td>0.077213</td>\n",
       "      <td>0.028421</td>\n",
       "      <td>-0.468712</td>\n",
       "      <td>-0.300037</td>\n",
       "      <td>0.258960</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1.650844</td>\n",
       "      <td>0.331513</td>\n",
       "      <td>-0.070209</td>\n",
       "      <td>-0.527614</td>\n",
       "      <td>0.078017</td>\n",
       "      <td>-0.557300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>0.304401</td>\n",
       "      <td>-0.058385</td>\n",
       "      <td>0.075209</td>\n",
       "      <td>-0.124505</td>\n",
       "      <td>-0.076763</td>\n",
       "      <td>0.493462</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>0.102583</td>\n",
       "      <td>-0.584656</td>\n",
       "      <td>-1.438856</td>\n",
       "      <td>0.117609</td>\n",
       "      <td>0.507552</td>\n",
       "      <td>0.172753</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>0.126608</td>\n",
       "      <td>-0.442366</td>\n",
       "      <td>-1.243592</td>\n",
       "      <td>0.317337</td>\n",
       "      <td>-1.462788</td>\n",
       "      <td>-0.031747</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>0.165657</td>\n",
       "      <td>-0.750740</td>\n",
       "      <td>-1.134998</td>\n",
       "      <td>0.024878</td>\n",
       "      <td>0.406017</td>\n",
       "      <td>-0.071070</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>0.204270</td>\n",
       "      <td>0.227116</td>\n",
       "      <td>0.069845</td>\n",
       "      <td>0.799382</td>\n",
       "      <td>0.077973</td>\n",
       "      <td>0.257094</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>1.650844</td>\n",
       "      <td>0.331513</td>\n",
       "      <td>-0.070209</td>\n",
       "      <td>-0.527614</td>\n",
       "      <td>0.078017</td>\n",
       "      <td>-0.557300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>0.948433</td>\n",
       "      <td>0.305064</td>\n",
       "      <td>0.051881</td>\n",
       "      <td>0.889119</td>\n",
       "      <td>0.109393</td>\n",
       "      <td>-0.022221</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>0.102583</td>\n",
       "      <td>-0.584656</td>\n",
       "      <td>-1.438856</td>\n",
       "      <td>0.117609</td>\n",
       "      <td>0.507552</td>\n",
       "      <td>0.172753</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>0.993523</td>\n",
       "      <td>0.360943</td>\n",
       "      <td>0.066592</td>\n",
       "      <td>1.078829</td>\n",
       "      <td>0.126024</td>\n",
       "      <td>0.040894</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>0.822623</td>\n",
       "      <td>-0.213845</td>\n",
       "      <td>0.150362</td>\n",
       "      <td>0.448932</td>\n",
       "      <td>0.034609</td>\n",
       "      <td>0.010852</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>2.825385</td>\n",
       "      <td>0.337614</td>\n",
       "      <td>0.006251</td>\n",
       "      <td>-0.631715</td>\n",
       "      <td>0.015992</td>\n",
       "      <td>-0.406674</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>1.022683</td>\n",
       "      <td>0.391898</td>\n",
       "      <td>0.069653</td>\n",
       "      <td>1.161627</td>\n",
       "      <td>0.134964</td>\n",
       "      <td>0.051972</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>0.050411</td>\n",
       "      <td>-0.194852</td>\n",
       "      <td>-0.602900</td>\n",
       "      <td>0.240307</td>\n",
       "      <td>-1.630889</td>\n",
       "      <td>-0.075408</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>0.090633</td>\n",
       "      <td>0.110356</td>\n",
       "      <td>0.066463</td>\n",
       "      <td>0.405084</td>\n",
       "      <td>0.031937</td>\n",
       "      <td>0.097316</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>0.005905</td>\n",
       "      <td>-0.061972</td>\n",
       "      <td>-0.183607</td>\n",
       "      <td>0.073498</td>\n",
       "      <td>-0.635120</td>\n",
       "      <td>-0.010752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>0.006637</td>\n",
       "      <td>-0.075429</td>\n",
       "      <td>-0.224463</td>\n",
       "      <td>0.094762</td>\n",
       "      <td>-0.843250</td>\n",
       "      <td>-0.019123</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>0.008064</td>\n",
       "      <td>-0.101653</td>\n",
       "      <td>-0.304083</td>\n",
       "      <td>0.136202</td>\n",
       "      <td>-1.248854</td>\n",
       "      <td>-0.035437</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>0.599082</td>\n",
       "      <td>-1.453118</td>\n",
       "      <td>0.531268</td>\n",
       "      <td>-0.602418</td>\n",
       "      <td>-0.054619</td>\n",
       "      <td>-0.272547</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>1.648032</td>\n",
       "      <td>0.088732</td>\n",
       "      <td>0.121994</td>\n",
       "      <td>-0.668342</td>\n",
       "      <td>-0.205338</td>\n",
       "      <td>1.478040</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>0.155287</td>\n",
       "      <td>-1.562716</td>\n",
       "      <td>0.735081</td>\n",
       "      <td>0.549408</td>\n",
       "      <td>-0.015013</td>\n",
       "      <td>0.335720</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>0.078436</td>\n",
       "      <td>-0.263506</td>\n",
       "      <td>-0.681937</td>\n",
       "      <td>0.082657</td>\n",
       "      <td>0.189093</td>\n",
       "      <td>0.050224</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>0.921988</td>\n",
       "      <td>0.286687</td>\n",
       "      <td>0.048666</td>\n",
       "      <td>0.823283</td>\n",
       "      <td>0.097250</td>\n",
       "      <td>-0.017452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>1.648032</td>\n",
       "      <td>0.088732</td>\n",
       "      <td>0.121994</td>\n",
       "      <td>-0.668342</td>\n",
       "      <td>-0.205338</td>\n",
       "      <td>1.478040</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>0.159901</td>\n",
       "      <td>-1.657120</td>\n",
       "      <td>0.780440</td>\n",
       "      <td>0.592953</td>\n",
       "      <td>-0.016444</td>\n",
       "      <td>0.385431</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>0.012791</td>\n",
       "      <td>-0.141986</td>\n",
       "      <td>-0.421991</td>\n",
       "      <td>0.175505</td>\n",
       "      <td>-1.549285</td>\n",
       "      <td>-0.032727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>0.102583</td>\n",
       "      <td>-0.584656</td>\n",
       "      <td>-1.438856</td>\n",
       "      <td>0.117609</td>\n",
       "      <td>0.507552</td>\n",
       "      <td>0.172753</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>0.834045</td>\n",
       "      <td>-0.148170</td>\n",
       "      <td>-0.700940</td>\n",
       "      <td>0.295994</td>\n",
       "      <td>0.215674</td>\n",
       "      <td>-0.068818</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>0.039114</td>\n",
       "      <td>0.028926</td>\n",
       "      <td>0.007498</td>\n",
       "      <td>0.127235</td>\n",
       "      <td>-0.010034</td>\n",
       "      <td>0.216172</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>0.013257</td>\n",
       "      <td>-0.017764</td>\n",
       "      <td>-0.092765</td>\n",
       "      <td>0.125153</td>\n",
       "      <td>0.077050</td>\n",
       "      <td>0.074132</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>0.599082</td>\n",
       "      <td>-1.453118</td>\n",
       "      <td>0.531268</td>\n",
       "      <td>-0.602418</td>\n",
       "      <td>-0.054619</td>\n",
       "      <td>-0.272547</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>1.848630</td>\n",
       "      <td>0.192292</td>\n",
       "      <td>0.014108</td>\n",
       "      <td>-0.718191</td>\n",
       "      <td>-0.013397</td>\n",
       "      <td>-0.090809</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>0.256158</td>\n",
       "      <td>0.158103</td>\n",
       "      <td>0.195744</td>\n",
       "      <td>0.913962</td>\n",
       "      <td>0.091690</td>\n",
       "      <td>0.041367</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>0.102583</td>\n",
       "      <td>-0.584656</td>\n",
       "      <td>-1.438856</td>\n",
       "      <td>0.117609</td>\n",
       "      <td>0.507552</td>\n",
       "      <td>0.172753</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>0.209455</td>\n",
       "      <td>0.202340</td>\n",
       "      <td>0.045182</td>\n",
       "      <td>0.849713</td>\n",
       "      <td>0.134564</td>\n",
       "      <td>0.178477</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>1.129603</td>\n",
       "      <td>0.011745</td>\n",
       "      <td>0.068811</td>\n",
       "      <td>-0.107122</td>\n",
       "      <td>-0.049933</td>\n",
       "      <td>0.350651</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>0.159701</td>\n",
       "      <td>-1.656330</td>\n",
       "      <td>0.780007</td>\n",
       "      <td>0.594309</td>\n",
       "      <td>-0.016526</td>\n",
       "      <td>0.405495</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "    <div class=\"colab-df-buttons\">\n",
       "\n",
       "  <div class=\"colab-df-container\">\n",
       "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0ede8c9b-e979-4fd3-aa82-b5829d973b4e')\"\n",
       "            title=\"Convert this dataframe to an interactive table.\"\n",
       "            style=\"display:none;\">\n",
       "\n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
       "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
       "  </svg>\n",
       "    </button>\n",
       "\n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    .colab-df-buttons div {\n",
       "      margin-bottom: 4px;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "    <script>\n",
       "      const buttonEl =\n",
       "        document.querySelector('#df-0ede8c9b-e979-4fd3-aa82-b5829d973b4e button.colab-df-convert');\n",
       "      buttonEl.style.display =\n",
       "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "      async function convertToInteractive(key) {\n",
       "        const element = document.querySelector('#df-0ede8c9b-e979-4fd3-aa82-b5829d973b4e');\n",
       "        const dataTable =\n",
       "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                    [key], {});\n",
       "        if (!dataTable) return;\n",
       "\n",
       "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "          + ' to learn more about interactive tables.';\n",
       "        element.innerHTML = '';\n",
       "        dataTable['output_type'] = 'display_data';\n",
       "        await google.colab.output.renderOutput(dataTable, element);\n",
       "        const docLink = document.createElement('div');\n",
       "        docLink.innerHTML = docLinkHtml;\n",
       "        element.appendChild(docLink);\n",
       "      }\n",
       "    </script>\n",
       "  </div>\n",
       "\n",
       "\n",
       "<div id=\"df-4bae8676-dd2b-4a29-aa5b-3905f6465c61\">\n",
       "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4bae8676-dd2b-4a29-aa5b-3905f6465c61')\"\n",
       "            title=\"Suggest charts.\"\n",
       "            style=\"display:none;\">\n",
       "\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "     width=\"24px\">\n",
       "    <g>\n",
       "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
       "    </g>\n",
       "</svg>\n",
       "  </button>\n",
       "\n",
       "<style>\n",
       "  .colab-df-quickchart {\n",
       "      --bg-color: #E8F0FE;\n",
       "      --fill-color: #1967D2;\n",
       "      --hover-bg-color: #E2EBFA;\n",
       "      --hover-fill-color: #174EA6;\n",
       "      --disabled-fill-color: #AAA;\n",
       "      --disabled-bg-color: #DDD;\n",
       "  }\n",
       "\n",
       "  [theme=dark] .colab-df-quickchart {\n",
       "      --bg-color: #3B4455;\n",
       "      --fill-color: #D2E3FC;\n",
       "      --hover-bg-color: #434B5C;\n",
       "      --hover-fill-color: #FFFFFF;\n",
       "      --disabled-bg-color: #3B4455;\n",
       "      --disabled-fill-color: #666;\n",
       "  }\n",
       "\n",
       "  .colab-df-quickchart {\n",
       "    background-color: var(--bg-color);\n",
       "    border: none;\n",
       "    border-radius: 50%;\n",
       "    cursor: pointer;\n",
       "    display: none;\n",
       "    fill: var(--fill-color);\n",
       "    height: 32px;\n",
       "    padding: 0;\n",
       "    width: 32px;\n",
       "  }\n",
       "\n",
       "  .colab-df-quickchart:hover {\n",
       "    background-color: var(--hover-bg-color);\n",
       "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "    fill: var(--button-hover-fill-color);\n",
       "  }\n",
       "\n",
       "  .colab-df-quickchart-complete:disabled,\n",
       "  .colab-df-quickchart-complete:disabled:hover {\n",
       "    background-color: var(--disabled-bg-color);\n",
       "    fill: var(--disabled-fill-color);\n",
       "    box-shadow: none;\n",
       "  }\n",
       "\n",
       "  .colab-df-spinner {\n",
       "    border: 2px solid var(--fill-color);\n",
       "    border-color: transparent;\n",
       "    border-bottom-color: var(--fill-color);\n",
       "    animation:\n",
       "      spin 1s steps(1) infinite;\n",
       "  }\n",
       "\n",
       "  @keyframes spin {\n",
       "    0% {\n",
       "      border-color: transparent;\n",
       "      border-bottom-color: var(--fill-color);\n",
       "      border-left-color: var(--fill-color);\n",
       "    }\n",
       "    20% {\n",
       "      border-color: transparent;\n",
       "      border-left-color: var(--fill-color);\n",
       "      border-top-color: var(--fill-color);\n",
       "    }\n",
       "    30% {\n",
       "      border-color: transparent;\n",
       "      border-left-color: var(--fill-color);\n",
       "      border-top-color: var(--fill-color);\n",
       "      border-right-color: var(--fill-color);\n",
       "    }\n",
       "    40% {\n",
       "      border-color: transparent;\n",
       "      border-right-color: var(--fill-color);\n",
       "      border-top-color: var(--fill-color);\n",
       "    }\n",
       "    60% {\n",
       "      border-color: transparent;\n",
       "      border-right-color: var(--fill-color);\n",
       "    }\n",
       "    80% {\n",
       "      border-color: transparent;\n",
       "      border-right-color: var(--fill-color);\n",
       "      border-bottom-color: var(--fill-color);\n",
       "    }\n",
       "    90% {\n",
       "      border-color: transparent;\n",
       "      border-bottom-color: var(--fill-color);\n",
       "    }\n",
       "  }\n",
       "</style>\n",
       "\n",
       "  <script>\n",
       "    async function quickchart(key) {\n",
       "      const quickchartButtonEl =\n",
       "        document.querySelector('#' + key + ' button');\n",
       "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
       "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
       "      try {\n",
       "        const charts = await google.colab.kernel.invokeFunction(\n",
       "            'suggestCharts', [key], {});\n",
       "      } catch (error) {\n",
       "        console.error('Error during call to suggestCharts:', error);\n",
       "      }\n",
       "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
       "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
       "    }\n",
       "    (() => {\n",
       "      let quickchartButtonEl =\n",
       "        document.querySelector('#df-4bae8676-dd2b-4a29-aa5b-3905f6465c61 button');\n",
       "      quickchartButtonEl.style.display =\n",
       "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "    })();\n",
       "  </script>\n",
       "</div>\n",
       "    </div>\n",
       "  </div>\n"
      ],
      "text/plain": [
       "           0         1         2         3         4         5\n",
       "0   0.921988  0.286687  0.048666  0.823283  0.097250 -0.017452\n",
       "1   0.898670  0.127356 -0.152437  0.463530 -0.729075 -0.637698\n",
       "2   0.011023 -0.008390 -0.060593  0.105811  0.055623  0.055877\n",
       "3   1.100265 -0.093898 -0.756460  0.114387  0.264164 -0.376416\n",
       "4   0.921988  0.286687  0.048666  0.823283  0.097250 -0.017452\n",
       "5   1.160543 -1.421518  0.575165  0.158791  0.092664 -1.178144\n",
       "6   0.102583 -0.584656 -1.438856  0.117609  0.507552  0.172753\n",
       "7   0.327693  0.232359  0.213670  1.169509  0.120463  0.099713\n",
       "9   0.379302  0.077213  0.028421 -0.468712 -0.300037  0.258960\n",
       "12  1.650844  0.331513 -0.070209 -0.527614  0.078017 -0.557300\n",
       "13  0.304401 -0.058385  0.075209 -0.124505 -0.076763  0.493462\n",
       "14  0.102583 -0.584656 -1.438856  0.117609  0.507552  0.172753\n",
       "15  0.126608 -0.442366 -1.243592  0.317337 -1.462788 -0.031747\n",
       "16  0.165657 -0.750740 -1.134998  0.024878  0.406017 -0.071070\n",
       "17  0.204270  0.227116  0.069845  0.799382  0.077973  0.257094\n",
       "18  1.650844  0.331513 -0.070209 -0.527614  0.078017 -0.557300\n",
       "19  0.948433  0.305064  0.051881  0.889119  0.109393 -0.022221\n",
       "20  0.102583 -0.584656 -1.438856  0.117609  0.507552  0.172753\n",
       "21  0.993523  0.360943  0.066592  1.078829  0.126024  0.040894\n",
       "22  0.822623 -0.213845  0.150362  0.448932  0.034609  0.010852\n",
       "23  2.825385  0.337614  0.006251 -0.631715  0.015992 -0.406674\n",
       "24  1.022683  0.391898  0.069653  1.161627  0.134964  0.051972\n",
       "25  0.050411 -0.194852 -0.602900  0.240307 -1.630889 -0.075408\n",
       "26  0.090633  0.110356  0.066463  0.405084  0.031937  0.097316\n",
       "27  0.005905 -0.061972 -0.183607  0.073498 -0.635120 -0.010752\n",
       "28  0.006637 -0.075429 -0.224463  0.094762 -0.843250 -0.019123\n",
       "29  0.008064 -0.101653 -0.304083  0.136202 -1.248854 -0.035437\n",
       "30  0.599082 -1.453118  0.531268 -0.602418 -0.054619 -0.272547\n",
       "31  1.648032  0.088732  0.121994 -0.668342 -0.205338  1.478040\n",
       "32  0.155287 -1.562716  0.735081  0.549408 -0.015013  0.335720\n",
       "33  0.078436 -0.263506 -0.681937  0.082657  0.189093  0.050224\n",
       "34  0.921988  0.286687  0.048666  0.823283  0.097250 -0.017452\n",
       "35  1.648032  0.088732  0.121994 -0.668342 -0.205338  1.478040\n",
       "36  0.159901 -1.657120  0.780440  0.592953 -0.016444  0.385431\n",
       "37  0.012791 -0.141986 -0.421991  0.175505 -1.549285 -0.032727\n",
       "38  0.102583 -0.584656 -1.438856  0.117609  0.507552  0.172753\n",
       "39  0.834045 -0.148170 -0.700940  0.295994  0.215674 -0.068818\n",
       "40  0.039114  0.028926  0.007498  0.127235 -0.010034  0.216172\n",
       "41  0.013257 -0.017764 -0.092765  0.125153  0.077050  0.074132\n",
       "42  0.599082 -1.453118  0.531268 -0.602418 -0.054619 -0.272547\n",
       "43  1.848630  0.192292  0.014108 -0.718191 -0.013397 -0.090809\n",
       "44  0.256158  0.158103  0.195744  0.913962  0.091690  0.041367\n",
       "45  0.102583 -0.584656 -1.438856  0.117609  0.507552  0.172753\n",
       "46  0.209455  0.202340  0.045182  0.849713  0.134564  0.178477\n",
       "47  1.129603  0.011745  0.068811 -0.107122 -0.049933  0.350651\n",
       "48  0.159701 -1.656330  0.780007  0.594309 -0.016526  0.405495"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "TTV_dataframe = pd.DataFrame(texts_topics_vectors).dropna()\n",
    "TTV_dataframe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "kVkd5UyWNaBN"
   },
   "outputs": [],
   "source": [
    "# Хочется теперь добавить разметку по темам, которые атрибуировала модель\n",
    "\n",
    "topics = TTV_dataframe.idxmax(axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "HDDi1l_v0aiv",
    "outputId": "03a156d3-bb5f-46e6-ee71-c04327fbb4a0"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 3.98684981e-01, -1.66052661e-01,  0.00000000e+00],\n",
       "       [ 3.06387749e-01, -1.69576344e-01,  0.00000000e+00],\n",
       "       [-3.21510670e-01, -3.23827760e-02,  3.00000000e+00],\n",
       "       [ 3.33229711e-01, -5.41511652e-01,  0.00000000e+00],\n",
       "       [ 3.98684981e-01, -1.66052661e-01,  0.00000000e+00],\n",
       "       [ 3.29788377e-01,  1.34603311e+00,  0.00000000e+00],\n",
       "       [-9.04714459e-01, -7.53946221e-01,  4.00000000e+00],\n",
       "       [-1.43651105e-01,  1.39637258e-03,  3.00000000e+00],\n",
       "       [ 1.55002992e-01, -6.58315527e-03,  0.00000000e+00],\n",
       "       [ 1.33286657e+00, -2.74285131e-01,  0.00000000e+00],\n",
       "       [-2.21728737e-02,  9.91029322e-02,  5.00000000e+00],\n",
       "       [-9.04714459e-01, -7.53946221e-01,  4.00000000e+00],\n",
       "       [-9.48070538e-01, -6.09941218e-01,  3.00000000e+00],\n",
       "       [-7.89052187e-01, -4.06033062e-01,  4.00000000e+00],\n",
       "       [-2.10520881e-01, -9.91673478e-02,  3.00000000e+00],\n",
       "       [ 1.33286657e+00, -2.74285131e-01,  0.00000000e+00],\n",
       "       [ 4.12861961e-01, -1.77158936e-01,  0.00000000e+00],\n",
       "       [-9.04714459e-01, -7.53946221e-01,  4.00000000e+00],\n",
       "       [ 4.26999052e-01, -2.06597528e-01,  3.00000000e+00],\n",
       "       [ 2.49425971e-01,  2.39275147e-01,  0.00000000e+00],\n",
       "       [ 2.33942984e+00, -2.43979261e-01,  0.00000000e+00],\n",
       "       [ 4.43048340e-01, -2.26214495e-01,  3.00000000e+00],\n",
       "       [-6.91641083e-01, -2.61820141e-01,  3.00000000e+00],\n",
       "       [-2.47075319e-01, -1.52012830e-02,  3.00000000e+00],\n",
       "       [-4.25972772e-01, -6.24323093e-02,  3.00000000e+00],\n",
       "       [-4.64097137e-01, -7.67861780e-02,  3.00000000e+00],\n",
       "       [-5.38393838e-01, -1.04758973e-01,  3.00000000e+00],\n",
       "       [-9.03356548e-03,  1.34669013e+00,  0.00000000e+00],\n",
       "       [ 1.24199616e+00,  8.51713831e-03,  0.00000000e+00],\n",
       "       [-6.56685213e-01,  1.55587022e+00,  2.00000000e+00],\n",
       "       [-5.56865328e-01, -3.56898879e-01,  4.00000000e+00],\n",
       "       [ 3.98684981e-01, -1.66052661e-01,  0.00000000e+00],\n",
       "       [ 1.24199616e+00,  8.51713831e-03,  0.00000000e+00],\n",
       "       [-6.86646050e-01,  1.64925135e+00,  2.00000000e+00],\n",
       "       [-6.20924398e-01, -1.58146308e-01,  3.00000000e+00],\n",
       "       [-9.04714459e-01, -7.53946221e-01,  4.00000000e+00],\n",
       "       [ 5.22874093e-02, -4.63779733e-01,  0.00000000e+00],\n",
       "       [-2.77430143e-01, -4.27030480e-03,  5.00000000e+00],\n",
       "       [-3.38107656e-01, -5.27903719e-02,  3.00000000e+00],\n",
       "       [-9.03356548e-03,  1.34669013e+00,  0.00000000e+00],\n",
       "       [ 1.49433599e+00, -1.26580545e-01,  0.00000000e+00],\n",
       "       [-1.71965175e-01,  4.19412393e-02,  3.00000000e+00],\n",
       "       [-9.04714459e-01, -7.53946221e-01,  4.00000000e+00],\n",
       "       [-2.29768760e-01, -1.04411546e-01,  3.00000000e+00],\n",
       "       [ 6.81362120e-01,  3.21205293e-02,  0.00000000e+00],\n",
       "       [-6.87749347e-01,  1.64807626e+00,  2.00000000e+00]])"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pca_model = PCA(n_components=2)\n",
    "texts_topics_2Dvectors = pca_model.fit_transform(TTV_dataframe)\n",
    "final_topics_matrix = np.c_[texts_topics_2Dvectors, topics]\n",
    "final_topics_matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "rrujHPynRYYf"
   },
   "outputs": [],
   "source": [
    "topics_df = pd.DataFrame(final_topics_matrix, columns=['x', 'y', 'topics'])\n",
    "topics_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1000
    },
    "id": "gEBklNGiRiPj",
    "outputId": "fe8c9b36-f9bb-4fd0-9e53-71597f62a54c"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-1c67560f-ad94-4bd9-a99f-c896d4099731\" class=\"colab-df-container\">\n",
       "    <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>x</th>\n",
       "      <th>y</th>\n",
       "      <th>topics</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.398685</td>\n",
       "      <td>-0.166053</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.306388</td>\n",
       "      <td>-0.169576</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-0.321511</td>\n",
       "      <td>-0.032383</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.333230</td>\n",
       "      <td>-0.541512</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.398685</td>\n",
       "      <td>-0.166053</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.329788</td>\n",
       "      <td>1.346033</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>-0.904714</td>\n",
       "      <td>-0.753946</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>-0.143651</td>\n",
       "      <td>0.001396</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.155003</td>\n",
       "      <td>-0.006583</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1.332867</td>\n",
       "      <td>-0.274285</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>-0.022173</td>\n",
       "      <td>0.099103</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>-0.904714</td>\n",
       "      <td>-0.753946</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>-0.948071</td>\n",
       "      <td>-0.609941</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>-0.789052</td>\n",
       "      <td>-0.406033</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>-0.210521</td>\n",
       "      <td>-0.099167</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>1.332867</td>\n",
       "      <td>-0.274285</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>0.412862</td>\n",
       "      <td>-0.177159</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>-0.904714</td>\n",
       "      <td>-0.753946</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>0.426999</td>\n",
       "      <td>-0.206598</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>0.249426</td>\n",
       "      <td>0.239275</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>2.339430</td>\n",
       "      <td>-0.243979</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>0.443048</td>\n",
       "      <td>-0.226214</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>-0.691641</td>\n",
       "      <td>-0.261820</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>-0.247075</td>\n",
       "      <td>-0.015201</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>-0.425973</td>\n",
       "      <td>-0.062432</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>-0.464097</td>\n",
       "      <td>-0.076786</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>-0.538394</td>\n",
       "      <td>-0.104759</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>-0.009034</td>\n",
       "      <td>1.346690</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>1.241996</td>\n",
       "      <td>0.008517</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>-0.656685</td>\n",
       "      <td>1.555870</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>-0.556865</td>\n",
       "      <td>-0.356899</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>0.398685</td>\n",
       "      <td>-0.166053</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>1.241996</td>\n",
       "      <td>0.008517</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>-0.686646</td>\n",
       "      <td>1.649251</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>-0.620924</td>\n",
       "      <td>-0.158146</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>-0.904714</td>\n",
       "      <td>-0.753946</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>0.052287</td>\n",
       "      <td>-0.463780</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>-0.277430</td>\n",
       "      <td>-0.004270</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>-0.338108</td>\n",
       "      <td>-0.052790</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>-0.009034</td>\n",
       "      <td>1.346690</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>1.494336</td>\n",
       "      <td>-0.126581</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>-0.171965</td>\n",
       "      <td>0.041941</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>-0.904714</td>\n",
       "      <td>-0.753946</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>-0.229769</td>\n",
       "      <td>-0.104412</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>0.681362</td>\n",
       "      <td>0.032121</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>-0.687749</td>\n",
       "      <td>1.648076</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "    <div class=\"colab-df-buttons\">\n",
       "\n",
       "  <div class=\"colab-df-container\">\n",
       "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1c67560f-ad94-4bd9-a99f-c896d4099731')\"\n",
       "            title=\"Convert this dataframe to an interactive table.\"\n",
       "            style=\"display:none;\">\n",
       "\n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
       "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
       "  </svg>\n",
       "    </button>\n",
       "\n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    .colab-df-buttons div {\n",
       "      margin-bottom: 4px;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "    <script>\n",
       "      const buttonEl =\n",
       "        document.querySelector('#df-1c67560f-ad94-4bd9-a99f-c896d4099731 button.colab-df-convert');\n",
       "      buttonEl.style.display =\n",
       "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "      async function convertToInteractive(key) {\n",
       "        const element = document.querySelector('#df-1c67560f-ad94-4bd9-a99f-c896d4099731');\n",
       "        const dataTable =\n",
       "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                    [key], {});\n",
       "        if (!dataTable) return;\n",
       "\n",
       "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "          + ' to learn more about interactive tables.';\n",
       "        element.innerHTML = '';\n",
       "        dataTable['output_type'] = 'display_data';\n",
       "        await google.colab.output.renderOutput(dataTable, element);\n",
       "        const docLink = document.createElement('div');\n",
       "        docLink.innerHTML = docLinkHtml;\n",
       "        element.appendChild(docLink);\n",
       "      }\n",
       "    </script>\n",
       "  </div>\n",
       "\n",
       "\n",
       "<div id=\"df-73c5a9c8-e65e-45ba-9f75-481baddf654a\">\n",
       "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-73c5a9c8-e65e-45ba-9f75-481baddf654a')\"\n",
       "            title=\"Suggest charts.\"\n",
       "            style=\"display:none;\">\n",
       "\n",
       "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "     width=\"24px\">\n",
       "    <g>\n",
       "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
       "    </g>\n",
       "</svg>\n",
       "  </button>\n",
       "\n",
       "<style>\n",
       "  .colab-df-quickchart {\n",
       "      --bg-color: #E8F0FE;\n",
       "      --fill-color: #1967D2;\n",
       "      --hover-bg-color: #E2EBFA;\n",
       "      --hover-fill-color: #174EA6;\n",
       "      --disabled-fill-color: #AAA;\n",
       "      --disabled-bg-color: #DDD;\n",
       "  }\n",
       "\n",
       "  [theme=dark] .colab-df-quickchart {\n",
       "      --bg-color: #3B4455;\n",
       "      --fill-color: #D2E3FC;\n",
       "      --hover-bg-color: #434B5C;\n",
       "      --hover-fill-color: #FFFFFF;\n",
       "      --disabled-bg-color: #3B4455;\n",
       "      --disabled-fill-color: #666;\n",
       "  }\n",
       "\n",
       "  .colab-df-quickchart {\n",
       "    background-color: var(--bg-color);\n",
       "    border: none;\n",
       "    border-radius: 50%;\n",
       "    cursor: pointer;\n",
       "    display: none;\n",
       "    fill: var(--fill-color);\n",
       "    height: 32px;\n",
       "    padding: 0;\n",
       "    width: 32px;\n",
       "  }\n",
       "\n",
       "  .colab-df-quickchart:hover {\n",
       "    background-color: var(--hover-bg-color);\n",
       "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "    fill: var(--button-hover-fill-color);\n",
       "  }\n",
       "\n",
       "  .colab-df-quickchart-complete:disabled,\n",
       "  .colab-df-quickchart-complete:disabled:hover {\n",
       "    background-color: var(--disabled-bg-color);\n",
       "    fill: var(--disabled-fill-color);\n",
       "    box-shadow: none;\n",
       "  }\n",
       "\n",
       "  .colab-df-spinner {\n",
       "    border: 2px solid var(--fill-color);\n",
       "    border-color: transparent;\n",
       "    border-bottom-color: var(--fill-color);\n",
       "    animation:\n",
       "      spin 1s steps(1) infinite;\n",
       "  }\n",
       "\n",
       "  @keyframes spin {\n",
       "    0% {\n",
       "      border-color: transparent;\n",
       "      border-bottom-color: var(--fill-color);\n",
       "      border-left-color: var(--fill-color);\n",
       "    }\n",
       "    20% {\n",
       "      border-color: transparent;\n",
       "      border-left-color: var(--fill-color);\n",
       "      border-top-color: var(--fill-color);\n",
       "    }\n",
       "    30% {\n",
       "      border-color: transparent;\n",
       "      border-left-color: var(--fill-color);\n",
       "      border-top-color: var(--fill-color);\n",
       "      border-right-color: var(--fill-color);\n",
       "    }\n",
       "    40% {\n",
       "      border-color: transparent;\n",
       "      border-right-color: var(--fill-color);\n",
       "      border-top-color: var(--fill-color);\n",
       "    }\n",
       "    60% {\n",
       "      border-color: transparent;\n",
       "      border-right-color: var(--fill-color);\n",
       "    }\n",
       "    80% {\n",
       "      border-color: transparent;\n",
       "      border-right-color: var(--fill-color);\n",
       "      border-bottom-color: var(--fill-color);\n",
       "    }\n",
       "    90% {\n",
       "      border-color: transparent;\n",
       "      border-bottom-color: var(--fill-color);\n",
       "    }\n",
       "  }\n",
       "</style>\n",
       "\n",
       "  <script>\n",
       "    async function quickchart(key) {\n",
       "      const quickchartButtonEl =\n",
       "        document.querySelector('#' + key + ' button');\n",
       "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
       "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
       "      try {\n",
       "        const charts = await google.colab.kernel.invokeFunction(\n",
       "            'suggestCharts', [key], {});\n",
       "      } catch (error) {\n",
       "        console.error('Error during call to suggestCharts:', error);\n",
       "      }\n",
       "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
       "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
       "    }\n",
       "    (() => {\n",
       "      let quickchartButtonEl =\n",
       "        document.querySelector('#df-73c5a9c8-e65e-45ba-9f75-481baddf654a button');\n",
       "      quickchartButtonEl.style.display =\n",
       "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "    })();\n",
       "  </script>\n",
       "</div>\n",
       "    </div>\n",
       "  </div>\n"
      ],
      "text/plain": [
       "           x         y  topics\n",
       "0   0.398685 -0.166053     0.0\n",
       "1   0.306388 -0.169576     0.0\n",
       "2  -0.321511 -0.032383     3.0\n",
       "3   0.333230 -0.541512     0.0\n",
       "4   0.398685 -0.166053     0.0\n",
       "5   0.329788  1.346033     0.0\n",
       "6  -0.904714 -0.753946     4.0\n",
       "7  -0.143651  0.001396     3.0\n",
       "8   0.155003 -0.006583     0.0\n",
       "9   1.332867 -0.274285     0.0\n",
       "10 -0.022173  0.099103     5.0\n",
       "11 -0.904714 -0.753946     4.0\n",
       "12 -0.948071 -0.609941     3.0\n",
       "13 -0.789052 -0.406033     4.0\n",
       "14 -0.210521 -0.099167     3.0\n",
       "15  1.332867 -0.274285     0.0\n",
       "16  0.412862 -0.177159     0.0\n",
       "17 -0.904714 -0.753946     4.0\n",
       "18  0.426999 -0.206598     3.0\n",
       "19  0.249426  0.239275     0.0\n",
       "20  2.339430 -0.243979     0.0\n",
       "21  0.443048 -0.226214     3.0\n",
       "22 -0.691641 -0.261820     3.0\n",
       "23 -0.247075 -0.015201     3.0\n",
       "24 -0.425973 -0.062432     3.0\n",
       "25 -0.464097 -0.076786     3.0\n",
       "26 -0.538394 -0.104759     3.0\n",
       "27 -0.009034  1.346690     0.0\n",
       "28  1.241996  0.008517     0.0\n",
       "29 -0.656685  1.555870     2.0\n",
       "30 -0.556865 -0.356899     4.0\n",
       "31  0.398685 -0.166053     0.0\n",
       "32  1.241996  0.008517     0.0\n",
       "33 -0.686646  1.649251     2.0\n",
       "34 -0.620924 -0.158146     3.0\n",
       "35 -0.904714 -0.753946     4.0\n",
       "36  0.052287 -0.463780     0.0\n",
       "37 -0.277430 -0.004270     5.0\n",
       "38 -0.338108 -0.052790     3.0\n",
       "39 -0.009034  1.346690     0.0\n",
       "40  1.494336 -0.126581     0.0\n",
       "41 -0.171965  0.041941     3.0\n",
       "42 -0.904714 -0.753946     4.0\n",
       "43 -0.229769 -0.104412     3.0\n",
       "44  0.681362  0.032121     0.0\n",
       "45 -0.687749  1.648076     2.0"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "topics_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 466
    },
    "id": "neT2VEHeRIxV",
    "outputId": "6e58a13d-0fd9-47f0-dfb6-7371b0187a54"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='x', ylabel='y'>"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(data=topics_df,\n",
    "                x=topics_df['x'],\n",
    "                y=topics_df['y'],\n",
    "                hue=topics_df['topics'],\n",
    "                palette='tab10')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "eT1jQZzuTR66"
   },
   "source": [
    "Кластеризация на 6 классов выделяет схожие с выделенными мной классы: \n",
    "1. не + в + приложение + может + войти ~ сбои в работе приложений (действительно большая их часть связана с проблемами при входе, что я не отразил в названии класса)\n",
    "2. авто + переоформить + купил + владельца + Как ~ переоформление автомобиля\n",
    "3. баланс + с + положительным + связь + как ~ сбои при пополнении баланса\n",
    "4. заводится + в+ приложение + машина + не ~ не заводится автомобиль (но также и сбои в работе приложений)\n",
    "6. владельца + Как + сменить + на + номер ~ переоформление автомобиля (модель, что справедливо, увидела две разных модели вопросов в этом классе)\n",
    "7. машины + местоположение + показывает + приложение + может ~ другие проблемы с авто\n",
    "Ожидаемо, модель не может выделить класс “по остаточному принципу”, как это сделал я.\n",
    "\n",
    "Что касается графика: класс сбои в работе приложений оказывается разбросанным по всей плоскости, класс сбои при пополнении баланса выделяется достаточно чётко в один кластер. А вот для остальных классов оказывается очень мало представителей (как ни странно), но они расположены близко друг к другу и на достаточно большом расстоянии друг от друга и других кластеров.\n"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "provenance": []
  },
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
